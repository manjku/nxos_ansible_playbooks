---
- name: Copy Certificates to device, Configure GRPC and verify metric fetch using gnmic from device
  hosts: N1
  serial: 1
  vars_prompt:
    - name: ansible_password
      prompt: Enter the network password
      private: true
  serial: 1
  gather_facts: no
  tasks:
    - name: Gather System information from switch
      nxos_facts:
        gather_subset: hardware
      tags: [verify_switch_hardware]

    - name: Verify switch is Nexus
      ansible.builtin.assert:
        that:
          - ansible_net_system == 'nxos'
        fail_msg: "FAIL: Switch {{ inventory_hostname }} is NOT Nexus. Not proceeding further in playbook"
        success_msg: "PASS: Switch is Nexus. Proceeding to next task in playbook"
      tags: [verify_switch_hardware]

    - name: Enable scp-server, copy gnmi certificates and disable scp-server feature
      vars:
        ansible_connection: network_cli # network_cli is required for nxos_copy_file module
      block:
        - name: Ensure scp-server is enabled
          cisco.nxos.nxos_feature:
            feature: scp-server
            state: enabled
          tags: [copy_file]

        - name: Copy file from linux controller node to device
          ansible.builtin.include_role:
            name: nxos_copy_file_bootflash
          vars:
            local_file_location: "{{ inventory_dir }}/certificate-gnmi-eve-ng-lab/gnmi.pfx"
            nxos_file: gnmi.pfx
          tags: [copy_file, verify_copy_file, delete_file]     # with ansible.builtin.include_role tags are NOT automatically inherited by the tasks in included_role,
                                                               # individual task within the role must have the appropriate tag
        
        - name: Display file is copied successfully
          ansible.builtin.debug:
            msg: "File is copied Successfully to {{ inventory_hostname }}"
      rescue:
        - name: Display file is NOT copied successfully
          ansible.builtin.debug:
            msg: "File is NOT copied Successfully to {{ inventory_hostname }}"

        - name: failing the playbook for {{ inventory_hostname }}
          fail:
            msg: "File copy failed. Aborting playbook for {{ inventory_hostname }}"

      always:
        - name: Disable scp-server feature
          cisco.nxos.nxos_feature:
            feature: scp-server
            state: disabled
          tags: [copy_file]

    - vars:
        ansible_connection: network_cli  # network_cli is required crypto certificate configurations
      block:
        - name: Configure GRPC on router
          ansible.builtin.include_role:
            name: configure_grpc
          vars:
            pfx_file: gnmi.pfx
            pfx_passphrase: test_pass
            trustpoint: gnmi
          tags: [verify_pfx_file_present, configure_grpc_config, verify_gprc_enabled]

        - name: Display GRPC configured succussfully
          ansible.builtin.debug:
            msg: 
              - "GRPC configuration configured successfully on {{ inventory_hostname }}"
              - "Proceeding to verify capability and metric fetch from {{ inventory_hostname }} with gnmic client"
      rescue:
        - name: Display GRPC configuration failed
          ansible.builtin.debug:
            msg: "GRPC configuration could not configured correctly on {{ inventory_hostname }}"

        - name: Rollback complete GRPC on {{ inventory_hostname }} as the GRPC configuration failed in config block
          ansible.builtin.include_role:
            name: configure_grpc
          vars:
            pfx_file: gnmi.pfx
            pfx_passphrase: test_pass
            trustpoint: gnmi
            configure_grpc_config: false
          tags: [configure_grpc_config]
        
        - name: failing the playbook for {{ inventory_hostname }}
          fail:
            msg: "GRPC configuration failed. Aborting playbook for {{ inventory_hostname }}"
    
    - name: Verify capabilities and metrics can be fetched from the device
      tags: [verify_grpc_metric_fect_from_device] # use this tag to execute all the tasks in this block
      block:
        - name: Fetch Capabitlies from {{ inventory_hostname }} using gnmic client
          ansible.builtin.import_role:
            name: gnmic_cli
          vars:
            gnmic_action: capabilities
          tags: [verify_grpc_capabilities]   # with ansible.builtin.import_role tags are inherited automatically by all the tasks in the imported role
    
        - name: Output from gnmic capabilites fetch
          ansible.builtin.debug:
            var: gnmi_output.stdout
          tags: [verify_grpc_capabilities]
    
        - name: Verify fetched capabilities
          ansible.builtin.assert:
            that:
              - "'Cisco Systems' in gnmi_output.stdout"
            fail_msg: "FAIL: Capabilites NOT received from {{ inventory_hostname }}"
            success_msg: "PASS: Capabilites received from {{ inventory_hostname }}"
          tags: [verify_grpc_capabilities]
    
        - name: Fetch hostname from {{ inventory_hostname }} using nxos native yang data model
          ansible.builtin.import_role:
            name: gnmic_cli
          vars:
            gnmic_action: get
            path:
              - /System/name
          tags: [verify_grpc_yang_model_fetch]
    
        - name: Output from hostname fetched with native yang data model
          ansible.builtin.debug:
            var: gnmi_output.stdout
          tags: [verify_grpc_yang_model_fetch]
    
        - name: Verify hostname is fetched correctly from {{ inventory_hostname }} using nxos native yang data model
          ansible.builtin.assert:
            that:
              - "'System/name' in gnmi_output.stdout|from_json|json_query('[0].updates[0].Path')"
            fail_msg: "FAIL: Hostname NOT received from {{ inventory_hostname}} using nxos native yang data model"
            success_msg: "PASS: Hostname received from {{ inventory_hostname}} using nxos native yang data model"
          tags: [verify_grpc_yang_model_fetch]
        
        - name: Display capabilities and metrics fetch results for {{ inventory_hostname }}
          ansible.builtin.debug:
            msg: "############### Configuration of GRPC completed and Service is UP and Running on {{ inventory_hostname }} ###############"
        
    #- name: Unconfigure GRPC and verify grpc service is disabled on device
    #  ansible.builtin.include_role:
    #    name: configure_grpc
    #  vars:
    #    pfx_file: gnmi.pfx
    #    pfx_passphrase: test_pass
    #    trustpoint: gnmi
    #    configure_grpc_config: false
    #  when: ansible_net_system == "nxos"
    #  tags: [unconfigure_grpc_config]