---
# Playbook execution:
# ansible-playbook grpc_status_report/job_report.yml --extra-vars "@grpc_status_report/vars_job_report.yml"

- name: Run jobs and generate report
  hosts: nxos
  gather_facts: no
  order: sorted
  vars_prompt:
    - name: ansible_httpapi_pass
      prompt: Enter the network password
      private: true

  pre_tasks:
    - name: Create output folder
      run_once: yes
      delegate_to: localhost
      file:
        path: "{{ outdir }}"
        state: directory
    
    # We set hosts as failed/missing until proven otherwise. See README.md
    - name: Set initial job status to catch missing/failed hosts
      set_fact:
        job_success: False
        missing: True

    - name: Gather System information from {{ inventory_hostname }}
      nxos_facts:
        gather_subset: hardware

    - name: Set remaining hosts as not missing
      set_fact:
        missing: False

  tasks:
    - name: Checking NXOS Pass/Fail Criteria to set Job Status for {{ inventory_hostname }}
      ignore_errors: yes
      when: ansible_net_system == 'nxos'
      vars:
        gnmic_linux_host: linux-n1
      block:
        - name: Fetch Capabitlies from {{ inventory_hostname }} using gnmic client
          ansible.builtin.import_role:
            name: gnmic_cli
          vars:
            gnmic_action: capabilities            
    
        - name: Set gnmi_output_capabilities facts
          set_fact:
            gnmi_output_capabilities: "{{ gnmi_output }}"
    
        - name: Fetch hostname from {{ inventory_hostname }} using yang data model
          ansible.builtin.import_role:
            name: gnmic_cli
          vars:
            gnmic_action: get
            path:
              - /system/config/hostname
            
        - name: Set yang data model output gnmi_output_metrics facts
          set_fact:
            gnmi_output_metrics: "{{ gnmi_output }}"
    
        - name: Output from hostname fetched with native yang data model
          ansible.builtin.debug:
            var: gnmi_output.stdout

        - debug:
            var: vars

  post_tasks:
    - name: Mark host as successful if capablities and hostname can be fetched with yang models
      set_fact:
        job_success: True
      when:
        - "'gNMI version' in gnmi_output_capabilities.stdout"
        - "'hostname' in gnmi_output_metrics.stdout|from_json|json_query('[0].updates[0].Path')"
        - 
      
    # Saving curated lists of hosts as localhost facts, to make the Jinja loops easier to read in the template. 
    # To use: hostvars['localhost']['success_list'] , etc
    - name: Save summary facts under Ansible controller
      delegate_to: localhost
      delegate_facts: True
      run_once: yes
      set_fact:
        date_str: "{{ date }}_{{ hms }}"
        date_str_pretty: "{{ date }} {{ hms_pretty }}"
        success_list: '{{ hostvars | dict2items | json_query(success_query) }}'
        failed_list: '{{ hostvars | dict2items | json_query(failed_query) }}'
        missing_list: '{{ hostvars | dict2items | json_query(missing_query) }}'
      vars:
        success_query: "[?value.job_success==`true`].key"
        failed_query: "[?value.job_success==`false` && value.missing==`false`].key"
        missing_query: "[?value.missing==`true`].key"
        date: "{{ '%Y-%m-%d' | strftime }}"
        hms_pretty: "{{ '%H:%M:%S' | strftime }}"
        hms: "{{ hms_pretty | replace(':','-') }}"

    - name: Save job report to {{ outdir }}
      delegate_to: localhost
      delegate_facts: True
      run_once: yes
      template:
        src: job_report_master.j2
        dest: "{{ outdir  }}/job_report_{{ hostvars['localhost']['date_str'] }}.html"

    - name: Send email report from Ansible server
      delegate_to: localhost
      run_once: yes
      when: send_email
      mail:
        host: "{{ smtp_host }}"
        port: "{{ smtp_port }}"
        username: "{{ smtp_user | default(omit) }}"
        password: "{{ smtp_pass | default(omit) }}"
        from: "{{ mail_from }}"
        to: "{{ mail_to }}"
        subject: "{{ mail_subject }}"
        subtype: html
        body: |
          <p>See attached for a detailed job report.</p>
          <p><strong>Successful hosts</strong>:<br><br>{{ hostvars['localhost']['success_list'] | join(' ') }}</p>
          <p style="color:red;"><strong>Failed hosts</strong>: <br><br>{{ hostvars['localhost']['failed_list'] | join(' ') }}</p>
          <p style="color:fuchsia;"><strong>Missing hosts</strong>: {{ hostvars['localhost']['missing_list'] | join(' ') }}</p>
          <p><i>Generated by playbook {{ playbook_dir }}/job_report.yaml on {{ hostvars['localhost']['date_str_pretty'] }}</i></p>
        attach:
          - "{{ outdir }}/job_report_{{ hostvars['localhost']['date_str'] }}.html"